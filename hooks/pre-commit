#!/usr/bin/env bash

# Stash changes in the working tree that have not been staged in the pending index, or aren't in Git's ignore list. We only want to run the requested builds, or tests, on the files that will be committed, not on the entire content of the working tree.
git stash --include-untracked --keep-index

# Run your build or tests here.

# Capture the result of the build and tests.
local result=$?

# Back out any changes made to files in the index that may have been caused by the build or tests. (This should never happen, but we want to be absolutely sure that files are not modified before we commit them.)
git reset --hard

# Un-stash changes that were stashed earlier. In addition to re-applying the unstaged changes stashed earlier, we also request, through the use of --index, that the pending changes in the index also be re-applied. This last request is necessary because we reverted the staged, index, files as part of the `reset --hard` command. After this step the state of the working tree and index will be exactly as it was before running the pre-commit script.
git stash pop --index

# Evaluate the test results and return success or failure.
exit ${result}
