#====================================================
# TMUX Configuration
#
# This script provides useful TMUX configuration settings.
#====================================================

# Change the default tmux control prefix to match that of GNU Screen.
set-option -g prefix C-a

# Go ahead and un-bind the default tmux control prefix so that it may be freed up for other purposes.
unbind C-b

# Setup C-a C-a to switch the current window with the last viewed window, similar to how GNU Screen behaves.
bind-key C-a last-window

# Support the ability to send a command prefix, such as CTRL+a, to a nested tmux session. This would be like running a terminal multiplexer inside of another terminal multiplexer. Again, similar to how GNU Screen behaves.
bind-key a send-prefix

# Enable Vi mode in tmux such that a buffer can be navigated in the same manner as in Vi using Vi-like bindings.
set-window-option -g mode-keys vi

# Start window numbering at 1 so that it's easier to navigate between the first window, at index 1, and the others, beginning at 2 and proceeding from there.
set-option -g base-index 1

# Renumber all windows sequentially when any window is closed.
set -g renumber-windows on

# Set the timeout associated with waiting for characters entered after escape, <ESC>, to zero. This removes the delay between pressing <ESC>, followed by a second character as part of a command sequence, before it's recognized as a command by tmux. Therefore, tools like vim, which relies on <ESC> to indicate the desire of the user to transition from one mode (INSERT) to another (NORMAL), will receive the <ESC> key press event immediately, instead of with a delay.
set -s escape-time 0

# Enable aggressive resizing of windows. Instruct tmux to only constrain a window to the size of the smaller client that is actively looking at it.
set-window-option -g aggressive-resize on

# Enable or disable the ability to synchronize input across all window panes. This allows input to one window pane to be pushed to all currently visible window panes.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Set the tmux window title to print the connection string of the host that the user is currently connected to.
set-option -g set-titles on
set-option -g set-titles-string "#T"

# Enable mouse support within tmux.
set-option -g mouse on

# Enable mouse scrolling within tmux. If the application opened within tmux has mouse support then forward scroll events to that application, bypassing tmux.
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

# Enable scrolling using the PageUp and PageDown keys. If the application opened within tmux has mouse support then forward scroll events to that application, bypassing tmux.
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# Set scroll back history so that the last 10,000 lines of output are remembered.
set-option -g history-limit 10000

# Un-bind the default key used for splitting a window vertically into multiple panes.
unbind %

# Bind GNU Screen-like keys for splitting vertically, v, and horizontally, h.
bind | split-window -h
bind - split-window -v

# Enable notifications within tmux when there is activity within a window pane.
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Automatically rename a window to the name of the command that is currently running within it.
set-window-option -g automatic-rename on

# Enabled xterm key sequences for key sequences such as CTRL+arrow. This allows tmux to pass through CTRL modifiers to function keys using xterm-style key sequences.
set-window-option -g xterm-keys on

# Configure TMUX to set the $TERM environmental variable to specifically indicate that the terminal container supports 256 color.
set -g default-terminal "screen-256color"

# Set background color for tmux panes to grey.
set-window-option -g window-style 'bg=#181818'

# Set background color for the active tmux pane to black. This will make it easier to distinguish between the active pane and all other tmux panes in the current window.
set-window-option -g window-active-style 'bg=black'

# Remove the border style applied by tmux to indicate an active pane. By changing a pane's background color, we can more easily distinguish between active and non-active panes.
set-window-option -g pane-active-border-style ''

#
# Set the tmux status bar.
#

# Set default colors.
set -g status-bg black
set -g status-fg white

# Left side of status bar.
set -g status-left-length 20
set -g status-left '#[fg=white][#[fg=cyan]#H:#S#[fg=white]]' # [Name of host]:[Name of session]

#
# Configure the Tmux Plugin Manager
#
# prefix-I
# Installs new plugins, and reloads Tmux environment.
#
# prefix + U
# Updates plugins.
#

# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'
