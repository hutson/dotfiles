#====================================================
# TMUX Configuration
#
# This script provides useful TMUX configuration settings.
#====================================================

# Change the default tmux control prefix to match that of GNU Screen.
set-option -g prefix C-a

# Go ahead and un-bind the default tmux control prefix so that it may be freed up for other purposes.
unbind C-b

# Setup C-a C-a to switch the current window with the last viewed window, similar to how GNU Screen behaves.
bind-key C-a last-window

# Support the ability to send a command prefix, such as CTRL+a, to a nested tmux session. This would be like running a terminal multiplexer inside of another terminal multiplexer. Again, similar to how GNU Screen behaves.
bind-key a send-prefix

# Enable Vi mode in tmux such that a buffer can be navigated in the same manner as in Vi using Vi-like bindings.
set-window-option -g mode-keys vi

# Start window numbering at 1 so that it's easier to navigate between the first window, at index 1, and the others, beginning at 2 and proceeding from there.
set-option -g base-index 1

# Renumber all windows sequentially when any window is closed.
set -g renumber-windows on

# Enable faster command sequences by setting the escape sequence timeout to zero. This removes the delay between entering two characters in a command sequence before it's recognized as a command by tmux.
#set -s escape-time 0 # Leave out for now. Reducing the timeout causes spurious characters to be placed into the terminals buffer.

# Enable aggressive resizing of windows. Instruct tmux to only constrain a window to the size of the smaller client that is actively looking at it.
set-window-option -g aggressive-resize on

# Enable or disable the ability to synchronize input across all window panes. This allows input to one window pane to be pushed to all currently visible window panes.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Set the tmux window title to print the connection string of the host that the user is currently connected to.
set-option -g set-titles on
set-option -g set-titles-string "#T"

# Enable the use of the mouse's scroll wheel to: enter copy mode and copy a selection of text by dragging, or to scroll the buffer, or select an option in the choice mode.
set-window-option -g mode-mouse on

# Enable the ability for the mouse to resize panes within a single window through the act of clicking and draging the border that defines the boundaries of a pane.
set-option -g mouse-resize-pane on

# Enable the ability for the mouse to select a pane as the active pane.
set-option -g mouse-select-pane on

# Enable the ability for the mouse to select a window as the active window by merely clicking on the windows name in the status bar.
set-option -g mouse-select-window on

# Set scroll back history so that the last 10,000 lines of output are remembered.
set-option -g history-limit 10000

# Un-bind the default key used for splitting a window vertically into multiple panes.
unbind %

# Bind GNU Screen-like keys for splitting vertically, v, and horizontally, h.
bind | split-window -h
bind - split-window -v

# Enable notifications within tmux when there is activity within a window pane.
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Automatically rename a window to the name of the command that is currently running within it.
set-window-option -g automatic-rename on

# Enabled xterm key sequences for key sequences such as CTRL+arrow. This allows tmux to pass through CTRL modifiers to function keys using xterm-style key sequences.
set-window-option -g xterm-keys on

# Configure TMUX to set the $TERM environmental variable to specifically indcate that the terminal container supports 256 color.
set -g default-terminal "screen-256color"

#
# Set the tmux status bar.
#

# Set default colors.
set -g status-bg black
set -g status-fg white

# Left side of status bar.
set -g status-left-length 20
set -g status-left '#[fg=white][#[fg=cyan]#H:#S#[fg=white]]' # [Name of host]:[Name of session]

#
# Configure the Tmux Plugin Manager
#

# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
	tmux-plugins/tpm               \
	tmux-plugins/tmux-resurrect    \
'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# prefix-I
# Installs new plugins, and reloads Tmux environment.

# prefix + U
# Updates plugins.

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
